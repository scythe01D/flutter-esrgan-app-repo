import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:flutter_esrgan_app/widgets/scaler.dart';
import 'package:google_sign_in/google_sign_in.dart';

final GoogleSignIn googleSignIn = GoogleSignIn();
final usersRef = FirebaseFirestore.instance.collection('users');

class HomePage extends StatefulWidget {
  const HomePage({Key? key}) : super(key: key);

  @override
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  bool isAuth = false;
  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    googleSignIn.onCurrentUserChanged.listen((account) {
      handleSignIn(account!);
    }, onError: (err) {
      print('Error signing in: $err');
    });
    // Reauthenticate user when app is opened
    googleSignIn.signInSilently(suppressErrors: false).then((account) {
      handleSignIn(account!);
    }).catchError((err) {
      print('Error signing in: $err');
    });
  }

  handleSignIn(GoogleSignInAccount account) async {
    // If account is not on the database then create new user on firebase
    if (account != null) {
      //print('User signed in!: $account');
      await createUserInFireStore();
      setState(() {
        isAuth = true;
      });
    } else {
      setState(() {
        isAuth = false;
      });
    }
  }

  createUserInFireStore() async {
    final GoogleSignInAccount? user = googleSignIn.currentUser;
    DocumentSnapshot doc = await usersRef
        .doc(user!.id)
        .get(); // get the user.id of the google account

    // if an email currently has no given username, then go to CreatePage()
    if (!doc.exists) {
      // obtain the following datails from the google account
      usersRef.doc(user.id).set({
        "id": user.id,
        "username": user.displayName,
        "photoUrl": user.photoUrl,
        "email": user.email,
        "displayName": user.displayName,
        "bio": "",
        //"timestamp": timestamp,
        //"token": tokens
        //"token": _messaging.getToken()
      });

      //tokensRef.document(user.id).setData({"id": user.id, "token": tokens});

      // doc = await usersRef.document(user.id).get();
    }
    //currentUser = User.fromDocument(doc);
  }

  login() {
    googleSignIn.signIn();
  }

  @override
  Widget build(BuildContext context) {
    return Container();
  }

  Scaffold buildUnAuthScreen() {
    ScreenScaler scaler = ScreenScaler()..init(context);
    return Scaffold(
      body: Container(
        alignment: Alignment.center,
        // decoration: BoxDecoration(
        //     gradient: LinearGradient(
        //   colors: [Colors.grey[800], Colors.black],
        //   begin: Alignment.topRight,
        //   end: Alignment.bottomLeft,
        // )),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.center,
          children: <Widget>[
            Container(
                height: scaler.getHeight(50),
                width: scaler.getWidth(50),
                child: Image.asset('assets/log_in_logo.png')),
            SizedBox(height: scaler.getHeight(10)),
            GestureDetector(
              onTap: login,
              child: Container(
                height: scaler.getHeight(30),
                width: scaler.getWidth(55),
                decoration: BoxDecoration(
                  image: DecorationImage(
                      image: AssetImage('assets/google_signin_button.png'),
                      fit: BoxFit.contain),
                ),
              ),
            )
          ],
        ),
      ),
    );
  }
}
